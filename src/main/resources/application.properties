# Application
spring.application.name=keruta
server.port=8080

# Server Thread Pool Configuration
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=20
server.tomcat.max-connections=10000
server.tomcat.accept-count=100

# MongoDB
spring.data.mongodb.host=${SPRING_DATA_MONGODB_HOST:localhost}
spring.data.mongodb.port=${SPRING_DATA_MONGODB_PORT:27017}
spring.data.mongodb.database=${SPRING_DATA_MONGODB_DATABASE:keruta}
spring.data.mongodb.username=${SPRING_DATA_MONGODB_USERNAME:admin}
spring.data.mongodb.password=${SPRING_DATA_MONGODB_PASSWORD:password}
spring.data.mongodb.authentication-database=${SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE:admin}
spring.data.mongodb.auto-index-creation=true

# Logging
# Set the logging pattern to include more information
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${spring.application.name}] [%X{requestId}] [%X{userId}] [%t] [%c{1}:%L] - %m%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${spring.application.name}] [%X{requestId}] [%X{userId}] [%t] [%c{1}:%L] - %m%n

# Set log levels for different components
logging.level.org.springframework.data.mongodb=INFO
logging.level.net.kigawa.keruta=INFO
logging.level.net.kigawa.keruta.core.usecase.submodule=DEBUG

# Security-related components logging
logging.level.org.springframework.security=INFO
logging.level.net.kigawa.keruta.infra.security=INFO
logging.level.org.keycloak=INFO

# HTTP requests and responses logging
logging.level.org.springframework.web=INFO
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=INFO

# Security - JWT Configuration
jwt.secret=${JWT_SECRET:your-secret-key-here-should-be-very-long-and-secure}
jwt.expiration=${JWT_EXPIRATION:86400000}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# User Authentication
auth.admin.username=${AUTH_ADMIN_USERNAME:admin}
auth.admin.password=${AUTH_ADMIN_PASSWORD:password}
auth.api.username=${AUTH_API_USERNAME:keruta-api}
auth.api.password=${AUTH_API_PASSWORD:api-password}

# Token-based Authentication
auth.token.header=Authorization
auth.token.prefix=Bearer
auth.token.audience=keruta-api
auth.token.issuer=keruta-auth

# WebSocket Authentication
websocket.token.required=true
websocket.token.param=token

# Swagger/OpenAPI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.groups-order=asc
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.csrf.enabled=true
springdoc.info.title=Keruta API
springdoc.info.description=API for managing sessions, workspaces, and documents
springdoc.info.version=1.0
springdoc.info.contact.name=Kigawa
springdoc.info.contact.url=https://github.com/kigawa-net/keruta
springdoc.info.license.name=MIT
springdoc.info.license.url=https://opensource.org/licenses/MIT

# Submodule Management Configuration
keruta.project.root=${KERUTA_PROJECT_ROOT:/home/coder/keruta/keruta}
keruta.submodule.auto-commit=${KERUTA_SUBMODULE_AUTO_COMMIT:true}
keruta.submodule.auto-push=${KERUTA_SUBMODULE_AUTO_PUSH:true}

# Spring MVC Configuration
# Ensure API endpoints take precedence over static resource handling
spring.mvc.static-path-pattern=/static/**
spring.web.resources.static-locations=classpath:/static/
spring.mvc.dispatch-options-request=true
spring.mvc.servlet.path=/

# Executor Configuration
keruta.executor.base-url=${KERUTA_EXECUTOR_BASE_URL:http://localhost:8081}
keruta.executor.circuit-breaker.failure-threshold=${KERUTA_EXECUTOR_CIRCUIT_BREAKER_FAILURE_THRESHOLD:5}
keruta.executor.circuit-breaker.timeout-ms=${KERUTA_EXECUTOR_CIRCUIT_BREAKER_TIMEOUT_MS:60000}
