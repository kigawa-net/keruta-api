# Application
spring.application.name=keruta
server.port=${SERVER_PORT:8080}

# Server Thread Pool Configuration
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=20
server.tomcat.max-connections=10000
server.tomcat.accept-count=100

# Jackson JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSS
spring.jackson.time-zone=Asia/Tokyo

# MongoDB
spring.data.mongodb.host=${SPRING_DATA_MONGODB_HOST:localhost}
spring.data.mongodb.port=${SPRING_DATA_MONGODB_PORT:27017}
spring.data.mongodb.database=${SPRING_DATA_MONGODB_DATABASE:keruta}
spring.data.mongodb.username=${SPRING_DATA_MONGODB_USERNAME:admin}
spring.data.mongodb.password=${SPRING_DATA_MONGODB_PASSWORD:password}
spring.data.mongodb.authentication-database=${SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE:admin}
spring.data.mongodb.auto-index-creation=true

# Logging
# Set the logging pattern to include more information
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${spring.application.name}] [%X{requestId}] [%X{userId}] [%t] [%c{1}:%L] - %m%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${spring.application.name}] [%X{requestId}] [%X{userId}] [%t] [%c{1}:%L] - %m%n

# Set log levels for different components
logging.level.org.springframework.data.mongodb=INFO
#logging.level.net.kigawa.keruta=DEBUG
logging.level.net.kigawa.keruta=INFO
logging.level.net.kigawa.keruta.core.usecase.task.background.BackgroundTaskProcessor=WARN
logging.level.net.kigawa.keruta.core.usecase.task.TaskServiceImpl=WARN
logging.level.net.kigawa.keruta.infra.app.kubernetes.KubernetesServiceImpl=WARN

# Security-related components logging
logging.level.org.springframework.security=INFO
logging.level.net.kigawa.keruta.infra.security=INFO
logging.level.org.keycloak=INFO

# HTTP requests and responses logging
logging.level.org.springframework.web=INFO
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=INFO

# Security - JWT Configuration removed
# jwt.secret=${JWT_SECRET:your-secret-key-here-should-be-very-long-and-secure}
# jwt.expiration=${JWT_EXPIRATION:86400000}
# jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Token-based Authentication removed
# auth.token.header=Authorization
# auth.token.prefix=Bearer
# auth.token.audience=keruta-api
# auth.token.issuer=keruta-auth

# WebSocket Authentication - Removed
# websocket.token.required=true
# websocket.token.param=token

# Swagger/OpenAPI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.groups-order=asc
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.csrf.enabled=true
springdoc.info.title=Keruta API
springdoc.info.description=API for managing tasks, documents, and Git repositories
springdoc.info.version=1.0
springdoc.info.contact.name=Kigawa
springdoc.info.contact.url=https://github.com/kigawa-net/keruta
springdoc.info.license.name=MIT
springdoc.info.license.url=https://opensource.org/licenses/MIT

# Background Task Processor
keruta.task.processor.default-image=keruta-task-executor:latest
keruta.task.processor.default-namespace=default
keruta.task.processor.processing-delay=5000

# Kubernetes Configuration
keruta.kubernetes.enabled=true
keruta.kubernetes.config-path=/path/to/kube/config
keruta.kubernetes.in-cluster=false
keruta.kubernetes.default-namespace=default
keruta.kubernetes.api-url=http://keruta-svc.kigawa-net-keruta.svc.cluster.local
keruta.kubernetes.api-port=8080

# CORS Configuration
spring.web.cors.allowed-origins=${SPRING_WEB_CORS_ALLOWED_ORIGINS:*}
spring.web.cors.allowed-methods=${SPRING_WEB_CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}
spring.web.cors.allowed-headers=${SPRING_WEB_CORS_ALLOWED_HEADERS:*}
spring.web.cors.allow-credentials=${SPRING_WEB_CORS_ALLOW_CREDENTIALS:false}
spring.web.cors.max-age=${SPRING_WEB_CORS_MAX_AGE:3600}
spring.web.cors.specific-origins=${SPRING_WEB_CORS_SPECIFIC_ORIGINS:http://localhost:3000,http://localhost:3001,https://keruta.kigawa.net}

# Keycloak configuration removed
# spring.security.oauth2.client.registration.keycloak.client-id=${KEYCLOAK_CLIENT_ID:keruta}
# spring.security.oauth2.client.registration.keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET:your-client-secret}
# spring.security.oauth2.client.registration.keycloak.scope=${KEYCLOAK_SCOPE:openid,profile,email}
# spring.security.oauth2.client.registration.keycloak.authorization-grant-type=${KEYCLOAK_GRANT_TYPE:authorization_code}
# spring.security.oauth2.client.registration.keycloak.redirect-uri=${KEYCLOAK_REDIRECT_URI:{baseUrl}/login/oauth2/code/{registrationId}}
#
# spring.security.oauth2.client.provider.keycloak.issuer-uri=${KEYCLOAK_URL:http://localhost:8180}/realms/${KEYCLOAK_REALM:keruta}
# spring.security.oauth2.client.provider.keycloak.user-name-attribute=${KEYCLOAK_USERNAME_ATTRIBUTE:preferred_username}
#
# keycloak.realm=${KEYCLOAK_REALM:keruta}
# keycloak.auth-server-url=${KEYCLOAK_URL:http://localhost:8180}
# keycloak.resource=${KEYCLOAK_CLIENT_ID:keruta}
# keycloak.public-client=${KEYCLOAK_PUBLIC_CLIENT:true}
# keycloak.principal-attribute=${KEYCLOAK_USERNAME_ATTRIBUTE:preferred_username}

# Coder Configuration
coder.base-url=${CODER_BASE_URL:http://localhost:3000}
coder.session-token=${CODER_SESSION_TOKEN:}
coder.organization=${CODER_ORGANIZATION:default}
coder.user=${CODER_USER:admin}
coder.default-template-id=${CODER_DEFAULT_TEMPLATE_ID:}
coder.connection-timeout=${CODER_CONNECTION_TIMEOUT:10000}
coder.read-timeout=${CODER_READ_TIMEOUT:30000}
coder.enable-ssl-verification=${CODER_ENABLE_SSL_VERIFICATION:true}
