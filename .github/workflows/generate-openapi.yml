name: Generate OpenAPI Specification

on:
  push:
    branches:
      - main
    paths:
      - 'keruta-api/api/**'
      - 'infra/**'
      - '.github/workflows/generate-openapi.yml'

jobs:
  generate-openapi:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: gradle

      - name: Build and run application
        run: |
          # set -e を追加してコマンド失敗時にスクリプトを終了
          set -e
          ./gradlew :keruta-api:api:bootRun --args='--spring.profiles.active=test' || { echo "Gradleビルドに失敗しました"; exit 1; } &
          echo "Waiting for application to start..."

          # Health check instead of sleep
          MAX_RETRIES=60
          RETRY_INTERVAL=5
          RETRY_COUNT=0

          echo "Checking health endpoint at /api/v1/health..."
          until curl -s -f http://localhost:8080/api/v1/health > /dev/null || [ $RETRY_COUNT -eq $MAX_RETRIES ]; do
            echo "Health check attempt $((RETRY_COUNT+1))/$MAX_RETRIES failed, retrying in ${RETRY_INTERVAL}s..."
            sleep $RETRY_INTERVAL
            RETRY_COUNT=$((RETRY_COUNT+1))
          done

          if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
            echo "Health check failed after $MAX_RETRIES attempts. Exiting."
            exit 1
          fi

          echo "Application is healthy! Proceeding with OpenAPI generation."
          mkdir -p /tmp
          curl -s -f http://localhost:8080/api-docs > /tmp/openapi.json || { echo "OpenAPI JSONの取得に失敗しました"; exit 1; }
          curl -s -f http://localhost:8080/api-docs.yaml > /tmp/openapi.yaml || { echo "OpenAPI YAMLの取得に失敗しました"; exit 1; }
          echo "OpenAPI specification generated"


      - name: Clone keruta-doc repository
        run: |
          set -e
          git clone https://${{ secrets.GIT_TOKEN }}@github.com/kigawa-net/keruta-doc.git /tmp/keruta-doc || { echo "リポジトリのクローンに失敗しました"; exit 1; }
          mkdir -p /tmp/keruta-doc/common/apiSpec
          cp /tmp/openapi.json /tmp/keruta-doc/common/apiSpec/ || { echo "OpenAPI JSONのコピーに失敗しました"; exit 1; }
          cp /tmp/openapi.yaml /tmp/keruta-doc/common/apiSpec/ || { echo "OpenAPI YAMLのコピーに失敗しました"; exit 1; }

      - name: Commit and push to keruta-doc repository
        run: |
          cd /tmp/keruta-doc
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add common/apiSpec/openapi.json common/apiSpec/openapi.yaml
          git add README.md structure.md todo.md
          git commit -m "Update documentation and OpenAPI specification" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
